phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.3,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2) # from asymptotic simulation
u = seq(.75, 1.1, by=.001) # normal approximation
lines(u, dnorm(u, mean=.96, sd=.03), lty=2, lwd=2)
legend(.65, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
set.seed(42)
dex = arima.sim(n=50, list(ar=.99))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x = arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2) # from asymptotic simulation
u = seq(.75, 1.1, by=.001) # normal approximation
lines(u, dnorm(u, mean=.96, sd=.03), lty=2, lwd=2)
legend(.65, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
?dnorm
fit
set.seed(42)
dex = arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x = arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.96, sd=.03), lty=2, lwd=2)
legend(.65, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
round(cbind(fit$x.mean, fit$ar, fit$var.pred), 2)
set.seed(42)
dex = arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x = arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.65, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
set.seed(42)
dex = arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x = arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
set.seed(42)
dex = 50 + arima.sim(n=50, list(ar=.99,order = c(1,0,0)), n.start = 50)
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  50 + arima.sim(n=50, list(ar=.99), n.start = 50)
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
set.seed(42)
dex = 50 + arima.sim(n=50, list(ar=.99,order = c(1,0,0)), n.start = 50)
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  50 + arima.sim(n=50, list(ar=.99), n.start = 50)
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 500
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
set.seed(42)
dex = 50 + arima.sim(n=50, list(ar=.99,order = c(1,0,0)), n.start = 50)
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  50 + arima.sim(n=50, list(ar=.99), n.start = 50)
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 100
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
?arima.sim
arima.sim(n = 50, list(ar = 0.99))
arima.sim(n = 50, list(ar = 0.99)) %>% mean
library(magrittr)
arima.sim(n = 50, list(ar = 0.99)) %>% mean
50 + arima.sim(n = 50, list(ar = 0.99)) %>% mean
50 + arima.sim(n = 50, list(ar = 0.99))
(50 + arima.sim(n = 50, list(ar = 0.99)) ) %>% mean
set.seed(42)
dex =  arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
set.seed(42)
dex = arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
round(cbind(fit$x.mean, fit$ar, fit$var.pred), 2)
set.seed(42)
dex = 50 +  arima.sim(n=50, list(ar=.99,order = c(1,0,0)), n.start = 50)
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
round(cbind(fit$x.mean, fit$ar, fit$var.pred), 2)
set.seed(42)
dex =  arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
set.seed(42)
dex =  arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 1000
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
set.seed(42)
dex =  arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 10000
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
set.seed(42)
dex =  arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 100000
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
set.seed(42)
dex =  arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
set.seed(42)
dex =  arima.sim(n=50, list(ar=.99,order = c(1,0,0)))
#AR(1) modeling w/ Yule-Walker
fit = ar.yw(dex, order=1)
m = fit$x.mean
phi = fit$ar
round(cbind(fit$x.mean, fit$ar, fit$var.pred), 2) %>% print
set.seed(101)
phi.yw = rep(NA, 1000)
for (i in 1:1000){
x =  arima.sim(n=50, list(ar=.99))
phi.yw[i] = ar.yw(x, order=1)$ar }
nboot = 200
resids = fit$resid[-1]
x.star = dex
phi.star.yw = rep(NA, nboot)
set.seed(102)
for (i in 1:nboot) {
resid.star = sample(resids, replace=TRUE)
for (t in 1:49){ x.star[t+1] = m + phi*(x.star[t]-m) + resid.star[t] }
phi.star.yw[i] = ar.yw(x.star, order=1)$ar
}
culer = rgb(.5,.7,1,.5)
hist(phi.star.yw, 15, main="", prob=TRUE, xlim=c(0.4,1.12), ylim=c(0,14),
col=culer, xlab=expression(hat(phi)))
lines(density(phi.yw, bw=.02), lwd=2)
u = seq(.75, 1.1, by=.001)
lines(u, dnorm(u, mean=.88, sd=.03), lty=2, lwd=2)
legend(.45, 14, legend=c('True Distribution', 'Bootstrap Distribution','Normal Approximation'),
bty='n', lty=c(1,0,2), lwd=c(2,0,2),col=1, pch=c(NA,22,NA), pt.bg=c(NA,culer,NA), pt.cex=2.5)
getwd()
setwd("/home/cam/Documents/STA 137/Final Project")
load(finalproject.Rdata)
setwd("/home/cam/Documents/STA 137/Final Project")
load(finalproject.Rdata)
load(finalproject)
load("/home/cam/Documents/STA 137/Final Project/finalproject.Rdata")
ts <- finalPro_data$Exports
ts %>% str
library(magrittr)
ts <- finalPro_data$Exports
ts %>% str
finalPro_data %>% str
library(forecast)
?ts
finalPro_data$Year
ts <- ts(finalPro_data$Exports,1960,2017)
ts %>% str
ts %>% plot
library(ggplot2)
ggplot() + geom_line(data = finalPro_data, aes(x = year, y = exports))
finalPro_data %>% str
ggplot() + geom_line(data = finalPro_data, aes(x = Year, y = Exports))
